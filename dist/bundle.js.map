{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://homework41/./src/lib/template-engine.ts","webpack://homework41/./src/cards.ts","webpack://homework41/./index.ts","webpack://homework41/./src/app.ts"],"sourcesContent":["/*\n{\n    tag: '',\n    cls: '',\n    attrs: {\n        name: value\n    },\n    content: [\n        {\n            tag: '',\n            cls: '',\n            content: ''\n        }\n    ]\n}\n*/\nexport function templateEngine(block) {\n    if (block === undefined || block === null || block === false) {\n        return document.createTextNode('');\n    }\n    if (typeof block === 'string' ||\n        typeof block === 'number' ||\n        block === true) {\n        return document.createTextNode(block);\n    }\n    if (Array.isArray(block)) {\n        const fragment = document.createDocumentFragment();\n        block.forEach((element) => {\n            fragment.appendChild(templateEngine(element));\n        });\n        return fragment;\n    }\n    const result = document.createElement(block.tag);\n    if (block.cls) {\n        const classes = [].concat(block.cls);\n        classes.forEach((cls) => {\n            result.classList.add(cls);\n        });\n    }\n    if (block.attrs) {\n        const keys = Object.keys(block.attrs);\n        keys.forEach((key) => {\n            result.setAttribute(key, block.attrs[key]);\n        });\n    }\n    result.appendChild(templateEngine(block.content));\n    return result;\n}\n","export const cards = [\n    {\n        type: 'diamonds',\n        rank: '6',\n        uri: './static/img/cards/6 бубны.svg',\n    },\n    {\n        type: 'clubs',\n        rank: '6',\n        uri: './static/img/cards/6 крести.svg',\n    },\n    {\n        type: 'spades',\n        rank: '6',\n        uri: './static/img/cards/6 пики.svg',\n    },\n    {\n        type: 'hearts',\n        rank: '6',\n        uri: './static/img/cards/6 черви.svg',\n    },\n    {\n        type: 'diamonds',\n        rank: '7',\n        uri: './static/img/cards/7 бубны.svg',\n    },\n    {\n        type: 'clubs',\n        rank: '7',\n        uri: './static/img/cards/7 крести.svg',\n    },\n    {\n        type: 'spades',\n        rank: '7',\n        uri: './static/img/cards/7 пики.svg',\n    },\n    {\n        type: 'hearts',\n        rank: '7',\n        uri: './static/img/cards/7 черви.svg',\n    },\n    {\n        type: 'diamonds',\n        rank: '8',\n        uri: './static/img/cards/8 бубны.svg',\n    },\n    {\n        type: 'clubs',\n        rank: '8',\n        uri: './static/img/cards/8 крести.svg',\n    },\n    {\n        type: 'spades',\n        rank: '8',\n        uri: './static/img/cards/8 пики.svg',\n    },\n    {\n        type: 'hearts',\n        rank: '8',\n        uri: './static/img/cards/8 черви.svg',\n    },\n    {\n        type: 'diamonds',\n        rank: '9',\n        uri: './static/img/cards/9 бубны.svg',\n    },\n    {\n        type: 'clubs',\n        rank: '9',\n        uri: './static/img/cards/9 крести.svg',\n    },\n    {\n        type: 'spades',\n        rank: '9',\n        uri: './static/img/cards/9 пики.svg',\n    },\n    {\n        type: 'hearts',\n        rank: '9',\n        uri: './static/img/cards/9 черви.svg',\n    },\n    {\n        type: 'diamonds',\n        rank: '6',\n        uri: './static/img/cards/10 бубны.svg',\n    },\n    {\n        type: 'clubs',\n        rank: '6',\n        uri: './static/img/cards/10 крести.svg',\n    },\n    {\n        type: 'spades',\n        rank: '10',\n        uri: './static/img/cards/10 пики.svg',\n    },\n    {\n        type: 'hearts',\n        rank: '10',\n        uri: './static/img/cards/10 черви.svg',\n    },\n    {\n        type: 'diamonds',\n        rank: 'jack',\n        uri: './static/img/cards/валет бубны.svg',\n    },\n    {\n        type: 'clubs',\n        rank: 'jack',\n        uri: './static/img/cards/валет крести.svg',\n    },\n    {\n        type: 'spades',\n        rank: 'jack',\n        uri: './static/img/cards/валет пики.svg',\n    },\n    {\n        type: 'hearts',\n        rank: 'jack',\n        uri: './static/img/cards/валет черви.svg',\n    },\n    {\n        type: 'diamonds',\n        rank: 'queen',\n        uri: './static/img/cards/дама бубны.svg',\n    },\n    {\n        type: 'clubs',\n        rank: 'queen',\n        uri: './static/img/cards/дама крести.svg',\n    },\n    {\n        type: 'spades',\n        rank: 'queen',\n        uri: './static/img/cards/дама пики.svg',\n    },\n    {\n        type: 'hearts',\n        rank: 'queen',\n        uri: './static/img/cards/дама черви.svg',\n    },\n    {\n        type: 'diamonds',\n        rank: 'king',\n        uri: './static/img/cards/король бубны.svg',\n    },\n    {\n        type: 'clubs',\n        rank: 'king',\n        uri: './static/img/cards/король крести.svg',\n    },\n    {\n        type: 'spades',\n        rank: 'king',\n        uri: './static/img/cards/король пики.svg',\n    },\n    {\n        type: 'hearts',\n        rank: 'king',\n        uri: './static/img/cards/король черви.svg',\n    },\n    {\n        type: 'diamonds',\n        rank: 'ace',\n        uri: './static/img/cards/туз бубны.svg',\n    },\n    {\n        type: 'clubs',\n        rank: 'ace',\n        uri: './static/img/cards/туз крести.svg',\n    },\n    {\n        type: 'spades',\n        rank: 'ace',\n        uri: './static/img/cards/туз пики.svg',\n    },\n    {\n        type: 'hearts',\n        rank: 'ace',\n        uri: './static/img/cards/туз черви.svg',\n    },\n];\n","import './static/style.css';\nimport { initApp } from './src/app';\ndocument.addEventListener('DOMContentLoaded', function () {\n    initApp().renderScreen('lobby');\n});\n","import { templateEngine } from './lib/template-engine';\nimport { cards } from './cards';\nexport function initApp() {\n    const app = {\n        state: {\n            showedCards: [],\n            timeSec: 0,\n            pairsNum: 0,\n            diffLevel: -1,\n            stage: '',\n        },\n        screens: {\n            lobby: function () {\n                var _a, _b;\n                clearInterval(app.state.timerInterval);\n                const appBlock = document.querySelector('.app');\n                if (appBlock) {\n                    appBlock.textContent = '';\n                }\n                app.setLayoutClass('lobby');\n                appBlock === null || appBlock === void 0 ? void 0 : appBlock.appendChild(templateEngine({\n                    tag: 'div',\n                    cls: 'lobby-title',\n                    content: 'Выбери сложность',\n                }));\n                appBlock === null || appBlock === void 0 ? void 0 : appBlock.appendChild(templateEngine({\n                    tag: 'form',\n                    content: [\n                        {\n                            tag: 'div',\n                            cls: 'lobby-levels',\n                            content: [\n                                {\n                                    tag: 'div',\n                                    cls: [\n                                        'lobby-levels-item',\n                                        'lobby-levels-item-regular',\n                                    ],\n                                    content: [\n                                        {\n                                            tag: 'input',\n                                            attrs: {\n                                                type: 'radio',\n                                                name: 'diff_levels',\n                                                value: 1,\n                                            },\n                                        },\n                                        {\n                                            tag: 'label',\n                                            content: 1,\n                                            attrs: {\n                                                for: 'diff_levels',\n                                            },\n                                        },\n                                    ],\n                                },\n                                {\n                                    tag: 'div',\n                                    cls: [\n                                        'lobby-levels-item',\n                                        'lobby-levels-item-regular',\n                                    ],\n                                    content: [\n                                        {\n                                            tag: 'input',\n                                            attrs: {\n                                                type: 'radio',\n                                                name: 'diff_levels',\n                                                value: 2,\n                                            },\n                                        },\n                                        {\n                                            tag: 'label',\n                                            content: 2,\n                                            attrs: {\n                                                for: 'diff_levels',\n                                            },\n                                        },\n                                    ],\n                                },\n                                {\n                                    tag: 'div',\n                                    cls: [\n                                        'lobby-levels-item',\n                                        'lobby-levels-item-regular',\n                                    ],\n                                    content: [\n                                        {\n                                            tag: 'input',\n                                            attrs: {\n                                                type: 'radio',\n                                                name: 'diff_levels',\n                                                value: 3,\n                                            },\n                                        },\n                                        {\n                                            tag: 'label',\n                                            content: 3,\n                                            attrs: {\n                                                for: 'diff_levels',\n                                            },\n                                        },\n                                    ],\n                                },\n                            ],\n                        },\n                        {\n                            tag: 'button',\n                            cls: 'lobby-submit',\n                            content: 'Старт',\n                        },\n                    ],\n                }));\n                (_a = appBlock === null || appBlock === void 0 ? void 0 : appBlock.querySelector('.lobby-levels')) === null || _a === void 0 ? void 0 : _a.addEventListener('click', function (e) {\n                    const target = e.target;\n                    if (target.tagName === 'INPUT') {\n                        e.stopPropagation();\n                        const levels = appBlock.querySelectorAll('.lobby-levels-item input');\n                        for (const l of levels) {\n                            const levelItem = l.parentElement;\n                            if (l.checked) {\n                                levelItem.classList.remove('lobby-levels-item-regular');\n                                levelItem.classList.add('lobby-levels-item-checked');\n                            }\n                            else {\n                                levelItem.classList.remove('lobby-levels-item-checked');\n                                levelItem.classList.add('lobby-levels-item-regular');\n                            }\n                        }\n                    }\n                });\n                (_b = appBlock === null || appBlock === void 0 ? void 0 : appBlock.querySelector('form')) === null || _b === void 0 ? void 0 : _b.addEventListener('submit', function (e) {\n                    e.preventDefault();\n                    const levels = appBlock.querySelectorAll('.lobby-levels-item input');\n                    let level = 0;\n                    for (const l of levels) {\n                        if (l.checked) {\n                            level = Number(l.value);\n                            break;\n                        }\n                    }\n                    app.state.diffLevel = level;\n                    app.renderNextScreen();\n                });\n            },\n            game: function () {\n                var _a;\n                app.state.timeSec = 0; //reset timer\n                app.state.status = ''; //reset the status\n                app.state.showedCards = [];\n                const appBlock = document.querySelector('.app');\n                appBlock.textContent = '';\n                app.setLayoutClass('game');\n                const gameDifficultyLevel = Number(app.state.diffLevel);\n                appBlock.appendChild(templateEngine({\n                    tag: 'div',\n                    cls: 'game-header',\n                    content: [\n                        {\n                            tag: 'div',\n                            cls: 'game-timer',\n                            content: [\n                                {\n                                    tag: 'div',\n                                    cls: 'game-timer-min',\n                                    content: '00',\n                                },\n                                {\n                                    tag: 'div',\n                                    content: '.',\n                                },\n                                {\n                                    tag: 'div',\n                                    cls: 'game-timer-sec',\n                                    content: '00',\n                                },\n                            ],\n                        },\n                        {\n                            tag: 'div',\n                            cls: 'game-header-actions',\n                            content: [\n                                {\n                                    tag: 'button',\n                                    cls: 'game-header-actions-restart',\n                                    content: 'Начать заново',\n                                },\n                            ],\n                        },\n                    ],\n                }));\n                //restart the game\n                (_a = appBlock === null || appBlock === void 0 ? void 0 : appBlock.querySelector('.game-header-actions-restart')) === null || _a === void 0 ? void 0 : _a.addEventListener('click', function () {\n                    app.renderScreen('lobby');\n                });\n                const gameContentElement = appBlock.appendChild(templateEngine({\n                    tag: 'div',\n                    cls: [\n                        'game-content',\n                        `game-content-grid-${gameDifficultyLevel}`,\n                    ],\n                }));\n                //show card\n                const showCard = (element) => {\n                    var _a;\n                    if (element.classList.contains('card-front')) {\n                        (_a = element.parentElement) === null || _a === void 0 ? void 0 : _a.classList.add('game-content-card-show');\n                    }\n                };\n                //hide card\n                const hideCard = (element) => {\n                    var _a;\n                    if (element.classList.contains('card-front')) {\n                        (_a = element.parentElement) === null || _a === void 0 ? void 0 : _a.classList.remove('game-content-card-show');\n                    }\n                };\n                //show card front side\n                gameContentElement.addEventListener('click', (e) => {\n                    var _a;\n                    const target = e.target;\n                    if (target.classList.contains('card-front')) {\n                        showCard(target);\n                        const targetParent = target.parentElement;\n                        //remember showed card\n                        const pickedCard = {\n                            rank: targetParent.dataset.cardRank,\n                            type: targetParent.dataset.cardType,\n                        };\n                        if (((_a = app.state.showedCards) === null || _a === void 0 ? void 0 : _a.length) === 1) {\n                            //500 is transition-duration\n                            setTimeout(() => {\n                                if (app.state.showedCards[0].rank ===\n                                    pickedCard.rank) {\n                                    app.state.pairsNum--;\n                                    if (app.state.pairsNum === 0) {\n                                        app.state.status = 'resolved-won';\n                                        app.renderNextScreen();\n                                    }\n                                }\n                                else {\n                                    hideCard(target);\n                                    const prevCard = document.querySelector(`.game-content-card[data-card-rank=\"${app.state.showedCards[0].rank}\"][data-card-type=\"${app.state.showedCards[0].type}\"] .card-front`);\n                                    hideCard(prevCard);\n                                    app.state.status = 'resolved-lost';\n                                    app.renderNextScreen();\n                                }\n                                app.state.showedCards = [];\n                            }, 500);\n                        }\n                        else {\n                            app.state.showedCards.push(pickedCard);\n                        }\n                    }\n                });\n                let numberOfCards = 0;\n                switch (gameDifficultyLevel) {\n                    case 1:\n                        numberOfCards = 8;\n                        break;\n                    case 2:\n                        numberOfCards = 18;\n                        break;\n                    case 3:\n                        numberOfCards = 36;\n                        break;\n                }\n                const cardsShuffled = cards.sort(() => Math.random() - 0.5);\n                let uniqueCards = []; //helps to count pairs on the table\n                app.state.pairsNum = 0;\n                for (let i = 0; i < numberOfCards; i++) {\n                    const pairCardIndex = uniqueCards.indexOf(cardsShuffled[i].rank);\n                    //array of unique cards contains a card with the same rank - it a pair\n                    if (pairCardIndex > -1) {\n                        uniqueCards.splice(pairCardIndex, 1);\n                        app.state.pairsNum++;\n                    }\n                    else {\n                        uniqueCards.push(cardsShuffled[i].rank);\n                    }\n                    gameContentElement.appendChild(templateEngine({\n                        tag: 'div',\n                        cls: 'game-content-card',\n                        attrs: {\n                            'data-card-type': cardsShuffled[i].type,\n                            'data-card-rank': cardsShuffled[i].rank,\n                        },\n                        content: [\n                            {\n                                tag: 'div',\n                                cls: 'card-front',\n                            },\n                            {\n                                tag: 'img',\n                                cls: 'card-back',\n                                attrs: {\n                                    src: cardsShuffled[i].uri,\n                                },\n                            },\n                        ],\n                    }));\n                }\n                //show all cards on screen render\n                setTimeout(() => {\n                    const cardFronts = gameContentElement.querySelectorAll('.card-front');\n                    cardFronts.forEach((c) => {\n                        showCard(c);\n                        setTimeout(() => {\n                            hideCard(c);\n                        }, 5000);\n                    });\n                }, 0);\n                //update game timer\n                app.state.timerInterval = setInterval(() => {\n                    app.state.timeSec++;\n                    const minElement = appBlock.querySelector('.game-timer-min');\n                    minElement.innerText = String(Math.floor(app.state.timeSec / 60)).padStart(2, '0');\n                    const secElement = appBlock.querySelector('.game-timer-sec');\n                    secElement.innerText = String(app.state.timeSec % 60).padStart(2, '0');\n                }, 1000);\n            },\n            resolution: function () {\n                var _a;\n                app.state.stage = 'resolution';\n                clearInterval(app.state.timerInterval);\n                document.body.appendChild(templateEngine({\n                    tag: 'div',\n                    cls: 'resolution',\n                    content: [\n                        {\n                            tag: 'div',\n                            cls: 'resolution-content',\n                            content: [\n                                {\n                                    tag: 'img',\n                                    cls: 'resolution-content-icon',\n                                    attrs: {\n                                        src: app.state.status ===\n                                            'resolved-lost'\n                                            ? './static/img/lost.png'\n                                            : './static/img/won.png',\n                                    },\n                                },\n                                {\n                                    tag: 'h1',\n                                    content: app.state.status === 'resolved-lost'\n                                        ? 'Вы проиграли!'\n                                        : 'Вы выиграли!',\n                                },\n                                {\n                                    tag: 'div',\n                                    cls: 'resolution-content-time',\n                                    content: [\n                                        {\n                                            tag: 'span',\n                                            cls: 'resolution-content-time-label',\n                                            content: 'Затраченное время:',\n                                        },\n                                        {\n                                            tag: 'span',\n                                            cls: 'resolution-content-time-value',\n                                            content: `${String(Math.floor(app.state.timeSec / 60)).padStart(2, '0')}.${String(app.state.timeSec % 60).padStart(2, '0')}`,\n                                        },\n                                    ],\n                                },\n                                {\n                                    tag: 'button',\n                                    cls: 'resolution-content-actions-restart',\n                                    content: 'Играть снова',\n                                },\n                            ],\n                        },\n                    ],\n                }));\n                (_a = document === null || document === void 0 ? void 0 : document.querySelector('.resolution-content-actions-restart')) === null || _a === void 0 ? void 0 : _a.addEventListener('click', function () {\n                    var _a;\n                    (_a = document === null || document === void 0 ? void 0 : document.querySelector('.resolution')) === null || _a === void 0 ? void 0 : _a.remove();\n                    app.renderScreen('lobby');\n                });\n            },\n        },\n        renderScreen: function (screenName) {\n            if (!screenName) {\n                throw new Error('Требуется передать наименование экрана');\n            }\n            if (!this.screens[screenName]) {\n                throw new Error(`Экрана ${screenName} не существует`);\n            }\n            this.state.stage = screenName; //save current stage\n            this.screens[screenName]();\n        },\n        renderNextScreen: function () {\n            if (this.state.stage === 'lobby') {\n                this.renderScreen('game');\n            }\n            else if (this.state.stage === 'game' &&\n                (this.state.status === 'resolved-lost' ||\n                    this.state.status === 'resolved-won')) {\n                this.renderScreen('resolution');\n            }\n        },\n        setLayoutClass: function (className) {\n            const appBlock = document.querySelector('.app');\n            //allows to set different styles for different screens' parent element\n            if (appBlock.dataset.specialClass) {\n                appBlock.classList.remove(appBlock.dataset.specialClass);\n            }\n            appBlock.classList.add(className);\n            appBlock.dataset.specialClass = className;\n        },\n    };\n    app.screens['lobby'].bind(app);\n    app.screens['game'].bind(app);\n    app.screens['resolution'].bind(app);\n    return app;\n}\n"],"names":["templateEngine","block","document","createTextNode","Array","isArray","fragment","createDocumentFragment","forEach","element","appendChild","result","createElement","tag","cls","concat","classList","add","attrs","Object","keys","key","setAttribute","content","cards","type","rank","uri","addEventListener","app","state","showedCards","timeSec","pairsNum","diffLevel","stage","screens","lobby","_a","_b","clearInterval","timerInterval","appBlock","querySelector","textContent","setLayoutClass","name","value","for","e","target","tagName","stopPropagation","levels","querySelectorAll","l","levelItem","parentElement","checked","remove","preventDefault","level","Number","renderNextScreen","game","status","gameDifficultyLevel","renderScreen","gameContentElement","showCard","contains","hideCard","targetParent","pickedCard","dataset","cardRank","cardType","length","setTimeout","prevCard","push","numberOfCards","cardsShuffled","sort","Math","random","uniqueCards","i","pairCardIndex","indexOf","splice","src","c","setInterval","innerText","String","floor","padStart","resolution","body","screenName","Error","this","className","specialClass","bind","initApp"],"sourceRoot":""}