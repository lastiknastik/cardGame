{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://homework41/./src/lib/template-engine.js","webpack://homework41/./src/cards.js","webpack://homework41/./index.js","webpack://homework41/./src/app.js"],"sourcesContent":["/*\n{\n    tag: '',\n    cls: '',\n    attrs: {\n        name: value\n    },\n    content: [\n        {\n            tag: '',\n            cls: '',\n            content: ''\n        }\n    ]\n}\n*/\n\nexport function templateEngine(block) {\n    if (block === undefined || block === null || block === false) {\n        return document.createTextNode('');\n    }\n    if (\n        typeof block === 'string' ||\n        typeof block === 'number' ||\n        block === true\n    ) {\n        return document.createTextNode(block);\n    }\n    if (Array.isArray(block)) {\n        const fragment = document.createDocumentFragment();\n\n        block.forEach((element) => {\n            fragment.appendChild(templateEngine(element));\n        });\n\n        return fragment;\n    }\n\n    const result = document.createElement(block.tag);\n\n    if (block.cls) {\n        const classes = [].concat(block.cls);\n        classes.forEach((cls) => {\n            result.classList.add(cls);\n        });\n    }\n\n    if (block.attrs) {\n        const keys = Object.keys(block.attrs);\n\n        keys.forEach((key) => {\n            result.setAttribute(key, block.attrs[key]);\n        });\n    }\n\n    result.appendChild(templateEngine(block.content));\n\n    return result;\n}\n","export const cards = [\n    {\n        type: 'diamonds',\n        rank: '6',\n        uri: './static/img/cards/6 бубны.svg',\n    },\n    {\n        type: 'clubs',\n        rank: '6',\n        uri: './static/img/cards/6 крести.svg',\n    },\n    {\n        type: 'spades',\n        rank: '6',\n        uri: './static/img/cards/6 пики.svg',\n    },\n    {\n        type: 'hearts',\n        rank: '6',\n        uri: './static/img/cards/6 черви.svg',\n    },\n    {\n        type: 'diamonds',\n        rank: '7',\n        uri: './static/img/cards/7 бубны.svg',\n    },\n    {\n        type: 'clubs',\n        rank: '7',\n        uri: './static/img/cards/7 крести.svg',\n    },\n    {\n        type: 'spades',\n        rank: '7',\n        uri: './static/img/cards/7 пики.svg',\n    },\n    {\n        type: 'hearts',\n        rank: '7',\n        uri: './static/img/cards/7 черви.svg',\n    },\n    {\n        type: 'diamonds',\n        rank: '8',\n        uri: './static/img/cards/8 бубны.svg',\n    },\n    {\n        type: 'clubs',\n        rank: '8',\n        uri: './static/img/cards/8 крести.svg',\n    },\n    {\n        type: 'spades',\n        rank: '8',\n        uri: './static/img/cards/8 пики.svg',\n    },\n    {\n        type: 'hearts',\n        rank: '8',\n        uri: './static/img/cards/8 черви.svg',\n    },\n    {\n        type: 'diamonds',\n        rank: '9',\n        uri: './static/img/cards/9 бубны.svg',\n    },\n    {\n        type: 'clubs',\n        rank: '9',\n        uri: './static/img/cards/9 крести.svg',\n    },\n    {\n        type: 'spades',\n        rank: '9',\n        uri: './static/img/cards/9 пики.svg',\n    },\n    {\n        type: 'hearts',\n        rank: '9',\n        uri: './static/img/cards/9 черви.svg',\n    },\n    {\n        type: 'diamonds',\n        rank: '6',\n        uri: './static/img/cards/10 бубны.svg',\n    },\n    {\n        type: 'clubs',\n        rank: '6',\n        uri: './static/img/cards/10 крести.svg',\n    },\n    {\n        type: 'spades',\n        rank: '10',\n        uri: './static/img/cards/10 пики.svg',\n    },\n    {\n        type: 'hearts',\n        rank: '10',\n        uri: './static/img/cards/10 черви.svg',\n    },\n    {\n        type: 'diamonds',\n        rank: 'jack',\n        uri: './static/img/cards/валет бубны.svg',\n    },\n    {\n        type: 'clubs',\n        rank: 'jack',\n        uri: './static/img/cards/валет крести.svg',\n    },\n    {\n        type: 'spades',\n        rank: 'jack',\n        uri: './static/img/cards/валет пики.svg',\n    },\n    {\n        type: 'hearts',\n        rank: 'jack',\n        uri: './static/img/cards/валет черви.svg',\n    },\n    {\n        type: 'diamonds',\n        rank: 'queen',\n        uri: './static/img/cards/дама бубны.svg',\n    },\n    {\n        type: 'clubs',\n        rank: 'queen',\n        uri: './static/img/cards/дама крести.svg',\n    },\n    {\n        type: 'spades',\n        rank: 'queen',\n        uri: './static/img/cards/дама пики.svg',\n    },\n    {\n        type: 'hearts',\n        rank: 'queen',\n        uri: './static/img/cards/дама черви.svg',\n    },\n    {\n        type: 'diamonds',\n        rank: 'king',\n        uri: './static/img/cards/король бубны.svg',\n    },\n    {\n        type: 'clubs',\n        rank: 'king',\n        uri: './static/img/cards/король крести.svg',\n    },\n    {\n        type: 'spades',\n        rank: 'king',\n        uri: './static/img/cards/король пики.svg',\n    },\n    {\n        type: 'hearts',\n        rank: 'king',\n        uri: './static/img/cards/король черви.svg',\n    },\n    {\n        type: 'diamonds',\n        rank: 'ace',\n        uri: './static/img/cards/туз бубны.svg',\n    },\n    {\n        type: 'clubs',\n        rank: 'ace',\n        uri: './static/img/cards/туз крести.svg',\n    },\n    {\n        type: 'spades',\n        rank: 'ace',\n        uri: './static/img/cards/туз пики.svg',\n    },\n    {\n        type: 'hearts',\n        rank: 'ace',\n        uri: './static/img/cards/туз черви.svg',\n    },\n];\n","import './static/style.css';\nimport { initApp } from './src/app.js';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    window.app = initApp();\n    window.app.renderScreen('lobby');\n});\n","import { templateEngine } from './lib/template-engine.js';\nimport { cards } from './cards.js';\n\nexport function initApp() {\n    const app = {\n        state: {\n            showedCards: [],\n            timeSec: 0,\n        },\n        screens: {\n            lobby: function () {\n                clearInterval(app.state.timerInterval);\n                const appBlock = document.querySelector('.app');\n\n                appBlock.textContent = '';\n                app.setLayoutClass('lobby');\n\n                appBlock.appendChild(\n                    templateEngine({\n                        tag: 'div',\n                        cls: 'lobby-title',\n                        content: 'Выбери сложность',\n                    })\n                );\n\n                appBlock.appendChild(\n                    templateEngine({\n                        tag: 'form',\n                        content: [\n                            {\n                                tag: 'div',\n                                cls: 'lobby-levels',\n                                content: [\n                                    {\n                                        tag: 'div',\n                                        cls: [\n                                            'lobby-levels-item',\n                                            'lobby-levels-item-regular',\n                                        ],\n                                        content: [\n                                            {\n                                                tag: 'input',\n                                                attrs: {\n                                                    type: 'radio',\n                                                    name: 'diff_levels',\n                                                    value: 1,\n                                                },\n                                            },\n                                            {\n                                                tag: 'label',\n                                                content: 1,\n                                                attrs: {\n                                                    for: 'diff_levels',\n                                                },\n                                            },\n                                        ],\n                                    },\n                                    {\n                                        tag: 'div',\n                                        cls: [\n                                            'lobby-levels-item',\n                                            'lobby-levels-item-regular',\n                                        ],\n                                        content: [\n                                            {\n                                                tag: 'input',\n                                                attrs: {\n                                                    type: 'radio',\n                                                    name: 'diff_levels',\n                                                    value: 2,\n                                                },\n                                            },\n                                            {\n                                                tag: 'label',\n                                                content: 2,\n                                                attrs: {\n                                                    for: 'diff_levels',\n                                                },\n                                            },\n                                        ],\n                                    },\n                                    {\n                                        tag: 'div',\n                                        cls: [\n                                            'lobby-levels-item',\n                                            'lobby-levels-item-regular',\n                                        ],\n                                        content: [\n                                            {\n                                                tag: 'input',\n                                                attrs: {\n                                                    type: 'radio',\n                                                    name: 'diff_levels',\n                                                    value: 3,\n                                                },\n                                            },\n                                            {\n                                                tag: 'label',\n                                                content: 3,\n                                                attrs: {\n                                                    for: 'diff_levels',\n                                                },\n                                            },\n                                        ],\n                                    },\n                                ],\n                            },\n                            {\n                                tag: 'button',\n                                cls: 'lobby-submit',\n                                content: 'Старт',\n                            },\n                        ],\n                    })\n                );\n\n                appBlock\n                    .querySelector('.lobby-levels')\n                    .addEventListener('click', function (e) {\n                        if (e.target.tagName === 'INPUT') {\n                            e.stopPropagation();\n\n                            const levels = appBlock.querySelectorAll(\n                                '.lobby-levels-item input'\n                            );\n\n                            for (const l of levels) {\n                                const levelItem = l.parentElement;\n\n                                if (l.checked) {\n                                    levelItem.classList.remove(\n                                        'lobby-levels-item-regular'\n                                    );\n                                    levelItem.classList.add(\n                                        'lobby-levels-item-checked'\n                                    );\n                                } else {\n                                    levelItem.classList.remove(\n                                        'lobby-levels-item-checked'\n                                    );\n                                    levelItem.classList.add(\n                                        'lobby-levels-item-regular'\n                                    );\n                                }\n                            }\n                        }\n                    });\n\n                appBlock\n                    .querySelector('form')\n                    .addEventListener('submit', function (e) {\n                        e.preventDefault();\n\n                        const levels = appBlock.querySelectorAll(\n                            '.lobby-levels-item input'\n                        );\n                        let level = 0;\n\n                        for (const l of levels) {\n                            if (l.checked) {\n                                level = l.value;\n                                break;\n                            }\n                        }\n\n                        app.state.diffLevel = level;\n\n                        app.renderNextScreen();\n                    });\n            },\n            game: function () {\n                app.state.timeSec = 0; //reset timer\n                app.state.status = ''; //reset the status\n                app.state.showedCards = [];\n                const appBlock = document.querySelector('.app');\n\n                appBlock.textContent = '';\n                app.setLayoutClass('game');\n\n                const gameDifficultyLevel = Number(app.state.diffLevel);\n\n                appBlock.appendChild(\n                    templateEngine({\n                        tag: 'div',\n                        cls: 'game-header',\n                        content: [\n                            {\n                                tag: 'div',\n                                cls: 'game-timer',\n                                content: [\n                                    {\n                                        tag: 'div',\n                                        cls: 'game-timer-min',\n                                        content: '00',\n                                    },\n                                    {\n                                        tag: 'div',\n                                        content: '.',\n                                    },\n                                    {\n                                        tag: 'div',\n                                        cls: 'game-timer-sec',\n                                        content: '00',\n                                    },\n                                ],\n                            },\n                            {\n                                tag: 'div',\n                                cls: 'game-header-actions',\n                                content: [\n                                    {\n                                        tag: 'button',\n                                        cls: 'game-header-actions-restart',\n                                        content: 'Начать заново',\n                                    },\n                                ],\n                            },\n                        ],\n                    })\n                );\n\n                //restart the game\n                appBlock\n                    .querySelector('.game-header-actions-restart')\n                    .addEventListener('click', function () {\n                        app.renderScreen('lobby');\n                    });\n\n                const gameContentElement = appBlock.appendChild(\n                    templateEngine({\n                        tag: 'div',\n                        cls: [\n                            'game-content',\n                            `game-content-grid-${gameDifficultyLevel}`,\n                        ],\n                    })\n                );\n\n                const showCard = (element) => {\n                    if (element.classList.contains('card-front')) {\n                        element.parentElement.classList.add(\n                            'game-content-card-show'\n                        );\n                    }\n                };\n\n                const hideCard = (element) => {\n                    if (element.classList.contains('card-front')) {\n                        element.parentElement.classList.remove(\n                            'game-content-card-show'\n                        );\n                    }\n                };\n\n                //show card front side\n                gameContentElement.addEventListener('click', (e) => {\n                    const target = e.target;\n                    if (target.classList.contains('card-front')) {\n                        showCard(target);\n\n                        //remember showed card\n                        const pickedCard = {\n                            rank: target.parentElement.dataset.cardRank,\n                            type: target.parentElement.dataset.cardType,\n                        };\n\n                        if (app.state.showedCards.length === 1) {\n                            //500 is transition-duration\n                            setTimeout(() => {\n                                if (\n                                    app.state.showedCards[0].rank ===\n                                    pickedCard.rank\n                                ) {\n                                    app.state.pairsNum--;\n                                    if (app.state.pairsNum === 0) {\n                                        app.state.status = 'resolved-won';\n                                        app.renderNextScreen();\n                                    }\n                                } else {\n                                    alert('oh noooo');\n\n                                    hideCard(target);\n\n                                    const prevCard = document.querySelector(\n                                        `.game-content-card[data-card-rank=\"${app.state.showedCards[0].rank}\"][data-card-type=\"${app.state.showedCards[0].type}\"] .card-front`\n                                    );\n\n                                    hideCard(prevCard);\n\n                                    app.state.status = 'resolved-lost';\n                                    app.renderNextScreen();\n                                }\n                                app.state.showedCards = [];\n                            }, 500);\n                        } else {\n                            app.state.showedCards.push(pickedCard);\n                        }\n                    }\n                });\n\n                let numberOfCards = 0;\n\n                switch (gameDifficultyLevel) {\n                    case 1:\n                        numberOfCards = 8;\n                        break;\n                    case 2:\n                        numberOfCards = 18;\n                        break;\n                    case 3:\n                        numberOfCards = 36;\n                        break;\n                }\n\n                const cardsShuffled = cards.sort(() => Math.random() - 0.5);\n\n                let uniqueCards = []; //helps to count pairs on the table\n                app.state.pairsNum = 0;\n\n                for (let i = 0; i < numberOfCards; i++) {\n                    const pairCardIndex = uniqueCards.indexOf(\n                        cardsShuffled[i].rank\n                    );\n\n                    //array of unique cards contains a card with the same rank - it a pair\n                    if (pairCardIndex > -1) {\n                        uniqueCards.splice(pairCardIndex, 1);\n                        app.state.pairsNum++;\n                    } else {\n                        uniqueCards.push(cardsShuffled[i].rank);\n                    }\n\n                    gameContentElement.appendChild(\n                        templateEngine({\n                            tag: 'div',\n                            cls: 'game-content-card',\n                            attrs: {\n                                'data-card-type': cardsShuffled[i].type,\n                                'data-card-rank': cardsShuffled[i].rank,\n                            },\n                            content: [\n                                {\n                                    tag: 'div',\n                                    cls: 'card-front',\n                                },\n                                {\n                                    tag: 'img',\n                                    cls: 'card-back',\n                                    attrs: {\n                                        src: cardsShuffled[i].uri,\n                                    },\n                                },\n                            ],\n                        })\n                    );\n                }\n\n                //show all cards on screen render\n                setTimeout(() => {\n                    gameContentElement\n                        .querySelectorAll('.card-front')\n                        .forEach((c) => {\n                            showCard(c);\n\n                            setTimeout(() => {\n                                hideCard(c);\n                            }, 5000);\n                        });\n                }, 0);\n\n                //update game timer\n                app.state.timerInterval = setInterval(() => {\n                    app.state.timeSec++;\n\n                    const minElement =\n                        appBlock.querySelector('.game-timer-min');\n\n                    minElement.innerText = String(\n                        Math.floor(app.state.timeSec / 60)\n                    ).padStart(2, '0');\n\n                    const secElement =\n                        appBlock.querySelector('.game-timer-sec');\n\n                    secElement.innerText = String(\n                        app.state.timeSec % 60\n                    ).padStart(2, '0');\n                }, 1000);\n            },\n            resolution: function () {\n                app.state.stage = 'resolution';\n                clearInterval(app.state.timerInterval);\n\n                document.body.appendChild(\n                    templateEngine({\n                        tag: 'div',\n                        cls: 'resolution',\n                        content: [\n                            {\n                                tag: 'div',\n                                cls: 'resolution-content',\n                                content: [\n                                    {\n                                        tag: 'img',\n                                        cls: 'resolution-content-icon',\n                                        attrs: {\n                                            src:\n                                                app.state.status ===\n                                                'resolved-lost'\n                                                    ? './static/img/lost.png'\n                                                    : './static/img/won.png',\n                                        },\n                                    },\n                                    {\n                                        tag: 'h1',\n                                        content:\n                                            app.state.status === 'resolved-lost'\n                                                ? 'Вы проиграли!'\n                                                : 'Вы выиграли!',\n                                    },\n                                    {\n                                        tag: 'div',\n                                        cls: 'resolution-content-time',\n                                        content: [\n                                            {\n                                                tag: 'span',\n                                                cls: 'resolution-content-time-label',\n                                                content: 'Затраченное время:',\n                                            },\n                                            {\n                                                tag: 'span',\n                                                cls: 'resolution-content-time-value',\n                                                content: `${String(\n                                                    Math.floor(\n                                                        app.state.timeSec / 60\n                                                    )\n                                                ).padStart(2, '0')}.${String(\n                                                    app.state.timeSec % 60\n                                                ).padStart(2, '0')}`,\n                                            },\n                                        ],\n                                    },\n                                    {\n                                        tag: 'button',\n                                        cls: 'resolution-content-actions-restart',\n                                        content: 'Играть снова',\n                                    },\n                                ],\n                            },\n                        ],\n                    })\n                );\n\n                document\n                    .querySelector('.resolution-content-actions-restart')\n                    .addEventListener('click', function () {\n                        document.querySelector('.resolution').remove();\n\n                        app.renderScreen('lobby');\n                    });\n            },\n        },\n        renderScreen: function (screenName) {\n            if (!screenName) {\n                throw new Error('Требуется передать наименование экрана');\n            }\n\n            if (!this.screens[screenName]) {\n                throw new Error(`Экрана ${screenName} не существует`);\n            }\n\n            this.state.stage = screenName; //save current stage\n\n            this.screens[screenName]();\n        },\n        renderNextScreen: function () {\n            if (this.state.stage === 'lobby') {\n                this.renderScreen('game');\n            } else if (\n                this.state.stage === 'game' &&\n                (this.state.status === 'resolved-lost' ||\n                    this.state.status === 'resolved-won')\n            ) {\n                this.renderScreen('resolution');\n            }\n        },\n        setLayoutClass: function (className) {\n            const appBlock = document.querySelector('.app');\n\n            //allows to set different styles for different screens' parent element\n            if (appBlock.dataset.specialClass) {\n                appBlock.classList.remove(appBlock.dataset.specialClass);\n            }\n\n            appBlock.classList.add(className);\n            appBlock.dataset.specialClass = className;\n        },\n    };\n\n    app.screens['lobby'].bind(app);\n    app.screens['game'].bind(app);\n    app.screens['resolution'].bind(app);\n\n    return app;\n}\n"],"names":["templateEngine","block","document","createTextNode","Array","isArray","fragment","createDocumentFragment","forEach","element","appendChild","result","createElement","tag","cls","concat","classList","add","attrs","Object","keys","key","setAttribute","content","cards","type","rank","uri","addEventListener","window","app","state","showedCards","timeSec","screens","lobby","clearInterval","timerInterval","appBlock","querySelector","textContent","setLayoutClass","name","value","for","e","target","tagName","stopPropagation","levels","querySelectorAll","l","levelItem","parentElement","checked","remove","preventDefault","level","diffLevel","renderNextScreen","game","status","gameDifficultyLevel","Number","renderScreen","gameContentElement","showCard","contains","hideCard","pickedCard","dataset","cardRank","cardType","length","setTimeout","pairsNum","alert","prevCard","push","numberOfCards","cardsShuffled","sort","Math","random","uniqueCards","i","pairCardIndex","indexOf","splice","src","c","setInterval","innerText","String","floor","padStart","resolution","stage","body","screenName","Error","this","className","specialClass","bind","initApp"],"sourceRoot":""}